#include <GL/glut.h>
#include <iostream>
#include<cmath>
int sign(float a){
if(a<0){
return -1;
}
else if (a=0){
return 0;
}
else {
return 1;
}
}

void ddaLine(int x0, int y0, int x1, int y1) {
float length;
  if(abs(x1-x0)>abs(y1-y0)){
      length=abs(x1-x0);
  }
  else{
     length=abs(y1-y0);
  }
   
   
   float dx=(x1-x0)/length;
   float dy=(y1-y0)/length;
   
    float x =x0+0.5*sign(dx);
    float y =y0+0.5*sign(dy);
    glBegin(GL_POINTS);
    for(int i=0; i<=length; i++){
   
     glVertex2f(round(x),round(y));
     x+=dx;
     y+=dy;
     }
     glEnd();
}

void dda_dotted_line(int x0, int y0, int x1, int y1) {
float length;
  if(abs(x1-x0)>abs(y1-y0)){
      length=abs(x1-x0);
  }
  else{
     length=abs(y1-y0);
  }
   
   
   float dx=(x1-x0)/length;
   float dy=(y1-y0)/length;
   
    float x =x0+0.5*sign(dx);
    float y =y0+0.5*sign(dy);
    glBegin(GL_POINTS);
    for(int i=0; i<=length; i++){
    if(i%4==0){
     glVertex2f(round(x),round(y));
     }
     x+=dx;
     y+=dy;
     }
     glEnd();
}

void dda_dashed_line(int x0, int y0, int x1, int y1) {
float length;
  if(abs(x1-x0)>abs(y1-y0)){
      length=abs(x1-x0);
  }
  else{
     length=abs(y1-y0);
  }
   
   
   float dx=(x1-x0)/length;
   float dy=(y1-y0)/length;
   
    float x =x0+0.5*sign(dx);
    float y =y0+0.5*sign(dy);
    glBegin(GL_POINTS);
    for(int i=0; i<=length; i++){
    if(i%8<5){
     glVertex2f(round(x),round(y));
     }
     x+=dx;
     y+=dy;
     }
     glEnd();
}


void dda_center_dotted_line(int x0, int y0, int x1, int y1) {
float length;
  if(abs(x1-x0)>abs(y1-y0)){
      length=abs(x1-x0);
  }
  else{
     length=abs(y1-y0);
  }
   
   
   float dx=(x1-x0)/length;
   float dy=(y1-y0)/length;
   
    float x =x0+0.5*sign(dx);
    float y =y0+0.5*sign(dy);
    glBegin(GL_POINTS);
    for(int i=0; i<=length; i++){
   
    if(i%20==5){
     glVertex2f(round(x),round(y));
     }
     
     x+=dx;
     y+=dy;
     }
     glEnd();
}



void display() {
    glClear(GL_COLOR_BUFFER_BIT);
   

    ddaLine(50, 800, 400, 900);  
   dda_dotted_line(60,60,400,400);
   dda_dashed_line(100,200,1400,1500);
   dda_center_dotted_line(50,400,1345,900);
   ddaLine(800,1100,900,900);
   ddaLine(1300,1100,1200,900);
   ddaLine(800,1100,1300,1100);
   ddaLine(900,900,1200,900);
   ddaLine(900,1100,1100,1200);
   ddaLine(1100,1100,1100,1200);
   ddaLine(0,750,1500,750);
   ddaLine(750,1500,750,0);
 
    glFlush();  
}

void initOpenGL() {
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);  
    glMatrixMode(GL_PROJECTION);  
    glLoadIdentity();  
    gluOrtho2D(0.0, 1500.0, 0.0, 1500.0);  
}
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(1200,1200);
    glutCreateWindow("DDA Line Drawing");

    initOpenGL();
   
    glutDisplayFunc(display);
    glutMainLoop();  

    return 0;
}
